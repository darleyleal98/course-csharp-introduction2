// Design de código:

Em um sistema de OOP, de modo geral tudo é objeto.
Por questões de design para organização, flexibilidade,
reuso, delegação -> Há várias categorias de classes:

-> Views
-> Controllers --> Faz a união entre a tela (front-end) e o sistema (back-end)
-> Entities
-> Services
-> Repositories --> Acessam repositórios e SGBDs

// Composição

É um tpo de associação que permite que um objeto mantenha outro;
Relação "tem-um" -> ou "tem-vários";
-> Vantagens: Organização de responsabilidades, coesão -> cada objeto é responsável
por apenas uma coisa, tudo bem definido.
Flexibilidade -> Reúso;





